// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// JobsColumns holds the columns for the "jobs" table.
	JobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "created", Type: field.TypeTime},
		{Name: "due", Type: field.TypeTime},
		{Name: "started", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeString, Size: 128},
		{Name: "version", Type: field.TypeInt},
		{Name: "priority", Type: field.TypeInt8},
		{Name: "weight", Type: field.TypeInt},
		{Name: "data", Type: field.TypeJSON},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "running", "failed"}, Default: "pending"},
		{Name: "retries", Type: field.TypeInt, Default: 0},
		{Name: "retried_fraction", Type: field.TypeFloat64, Default: 0},
		{Name: "logged_stall_warning", Type: field.TypeBool, Default: false},
	}
	// JobsTable holds the schema information for the "jobs" table.
	JobsTable = &schema.Table{
		Name:       "jobs",
		Columns:    JobsColumns,
		PrimaryKey: []*schema.Column{JobsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "job_status_priority_due",
				Unique:  false,
				Columns: []*schema.Column{JobsColumns[9], JobsColumns[6], JobsColumns[2]},
			},
			{
				Name:    "job_due",
				Unique:  false,
				Columns: []*schema.Column{JobsColumns[2]},
			},
		},
	}
	// LogEntriesColumns holds the columns for the "log_entries" table.
	LogEntriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "time", Type: field.TypeTime},
		{Name: "time_known", Type: field.TypeBool},
		{Name: "level", Type: field.TypeInt},
		{Name: "message", Type: field.TypeString},
		{Name: "attributes", Type: field.TypeJSON},
		{Name: "source_file", Type: field.TypeString},
		{Name: "source_function", Type: field.TypeString},
		{Name: "source_line", Type: field.TypeInt},
		{Name: "public_message", Type: field.TypeString},
		{Name: "log_entry_user", Type: field.TypeInt, Nullable: true},
	}
	// LogEntriesTable holds the schema information for the "log_entries" table.
	LogEntriesTable = &schema.Table{
		Name:       "log_entries",
		Columns:    LogEntriesColumns,
		PrimaryKey: []*schema.Column{LogEntriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "log_entries_users_user",
				Columns:    []*schema.Column{LogEntriesColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "time", Type: field.TypeTime},
		{Name: "code", Type: field.TypeBytes, Unique: true},
		{Name: "code_valid_from", Type: field.TypeTime},
		{Name: "user_agent", Type: field.TypeString},
		{Name: "ip", Type: field.TypeString},
		{Name: "session_user", Type: field.TypeInt, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_users_user",
				Columns:    []*schema.Column{SessionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TwoFactorActionsColumns holds the columns for the "two_factor_actions" table.
	TwoFactorActionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "type", Type: field.TypeString, Size: 128},
		{Name: "version", Type: field.TypeInt},
		{Name: "data", Type: field.TypeJSON},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString, Size: 9},
	}
	// TwoFactorActionsTable holds the schema information for the "two_factor_actions" table.
	TwoFactorActionsTable = &schema.Table{
		Name:       "two_factor_actions",
		Columns:    TwoFactorActionsColumns,
		PrimaryKey: []*schema.Column{TwoFactorActionsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "alert_discord_id", Type: field.TypeString, Default: ""},
		{Name: "alert_email", Type: field.TypeString, Default: ""},
		{Name: "locked", Type: field.TypeBool, Default: false},
		{Name: "locked_until", Type: field.TypeTime, Nullable: true},
		{Name: "content", Type: field.TypeBytes},
		{Name: "file_name", Type: field.TypeString},
		{Name: "mime", Type: field.TypeString},
		{Name: "nonce", Type: field.TypeBytes},
		{Name: "key_salt", Type: field.TypeBytes},
		{Name: "hash_time", Type: field.TypeUint32},
		{Name: "hash_memory", Type: field.TypeUint32},
		{Name: "hash_threads", Type: field.TypeUint8},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		JobsTable,
		LogEntriesTable,
		SessionsTable,
		TwoFactorActionsTable,
		UsersTable,
	}
)

func init() {
	LogEntriesTable.ForeignKeys[0].RefTable = UsersTable
	SessionsTable.ForeignKeys[0].RefTable = UsersTable
}
