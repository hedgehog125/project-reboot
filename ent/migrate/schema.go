// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "time", Type: field.TypeTime},
		{Name: "code", Type: field.TypeBytes, Unique: true},
		{Name: "code_valid_from", Type: field.TypeTime},
		{Name: "user_agent", Type: field.TypeString},
		{Name: "ip", Type: field.TypeString},
		{Name: "user_sessions", Type: field.TypeInt, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_users_sessions",
				Columns:    []*schema.Column{SessionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TwoFactorActionsColumns holds the columns for the "two_factor_actions" table.
	TwoFactorActionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "type", Type: field.TypeString, Size: 128},
		{Name: "version", Type: field.TypeInt},
		{Name: "data", Type: field.TypeJSON},
		{Name: "expires_at", Type: field.TypeTime},
		{Name: "code", Type: field.TypeString, Size: 6},
	}
	// TwoFactorActionsTable holds the schema information for the "two_factor_actions" table.
	TwoFactorActionsTable = &schema.Table{
		Name:       "two_factor_actions",
		Columns:    TwoFactorActionsColumns,
		PrimaryKey: []*schema.Column{TwoFactorActionsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "alert_discord_id", Type: field.TypeString, Default: ""},
		{Name: "alert_email", Type: field.TypeString, Default: ""},
		{Name: "content", Type: field.TypeBytes},
		{Name: "file_name", Type: field.TypeString},
		{Name: "mime", Type: field.TypeString},
		{Name: "nonce", Type: field.TypeBytes},
		{Name: "key_salt", Type: field.TypeBytes},
		{Name: "password_hash", Type: field.TypeBytes},
		{Name: "password_salt", Type: field.TypeBytes},
		{Name: "hash_time", Type: field.TypeUint32},
		{Name: "hash_memory", Type: field.TypeUint32},
		{Name: "hash_key_len", Type: field.TypeUint32},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SessionsTable,
		TwoFactorActionsTable,
		UsersTable,
	}
)

func init() {
	SessionsTable.ForeignKeys[0].RefTable = UsersTable
}
